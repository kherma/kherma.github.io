import portfolioData from"./settings.js";class Portfolio{constructor(){this.portfolioContainer=document.querySelector(".portfolio__grid")}generatePortfolioItem(t){const e=`\n    <div class="portfolio__grid--item">\n      <div class="item--img">\n        <img src="./images/${t.image}" alt="${t.alt}" />\n      </div>\n      <div class="item--text">\n        <div class="text--category">\n          Purpose: <span class="text--regular">${t.purpose}</span>\n        </div>\n        <div class="text--category">\n          Focus: <span class="text--regular">${t.focus}</span>\n        </div>\n        <div class="text--category">\n          Technology:\n          <span class="text--regular">${t.technology}</span>\n        </div>\n        <div class="text--category">\n          Responsiveness:\n          <span class="text--regular">${t.responsiveness}</span>\n        </div>\n        <div class="text--category">\n          Repository:\n          <span class="text--regular"\n            ><a\n              href="${t.repoLink}"\n              target="_blank"\n              >${t.repository}</a\n            ></span\n          >\n        </div>\n        <div class="text--category">\n          Deploy:\n          <span class="text--regular"\n            ><a\n              href="${t.depoLink}"\n              target="_blank"\n              >${t.deploy}</a\n            ></span\n          >\n        </div>\n      </div>\n    </div>\n    `;this.portfolioContainer.insertAdjacentHTML("beforeend",e)}generatePortfolio(){portfolioData.forEach(t=>{this.generatePortfolioItem(t)})}}const createPortfolio=new Portfolio;createPortfolio.generatePortfolio();